Brushed DC Motor Controller

This application controls a brushed DC motor.  Two communication methods
are supported; a hobby servo-style input for basic voltage control or a CAN
input for more advanced control (the two inputs are mutually exclusive).

When using either communication methods, a basic voltage control mode is
available.  In this mode, the external controller directly specifies the
desired output voltage.  When using CAN, an output voltage slew rate can be
specified, which results in the output voltage adjusting in a linear
fashion from the current voltage to the new voltage (as opposed to directly
jumping to the new voltage if the slew rate is disabled).

Additional advanced control methods are also available when using the CAN
communication interface.  There are voltage compensation control mode,
current control mode, speed control mode, and position control mode.  Each
of these modes is mutually exclusive and operate using a PID controller
whose gains are fully programmable via the CAN interface.  Each PID
controller starts with all of its gains set to zero, so no output voltage
will be generated by any of these modes until the PID controller is at
least partially configured.

In voltage compensation control mode, the output duty cycle is adjusted to
compensate for changes in the input voltage, resulting in a constant
voltage output.

In speed control mode, the speed of the motor is measured using the
quadrature encoder input.  Only PHA is used for measuring the speed, so it
can be used with gear tooth sensors as well (which only provide a single
pulse stream, not a quadrature pair as provided by a shaft encoder).

In position control mode, the position of the motor can be measured using
the quadrature encoder input or the analog input.  When using the analog
input, a 10K potentiometer must be coupled to the output shaft of the motor
(either before or after gearing) in some manner so that the motor position
can be tracked.

The status of the motor controller can also be monitored over the CAN
interface.  The bus voltage, output voltage, motor current, ambient
temperature, speed, position, limit switch values, fault status, power
status, and firmware version can all be queried.

This version of the firmware contains enhancements not present in the
pre-programmed firmware on the MDL-BDC.  These enhancements are:

- Addition of the System Halt, System Reset, and System Resume commands.

- Addition of the Maximum Output Voltage command to allow motors with lower
  voltage ratings (such as 7.2V motors) to be used.

- Addition of the ability to read the value of the motor controller's
  parameters.

-------------------------------------------------------------------------------

Copyright (c) 2008-2013 Texas Instruments Incorporated.  All rights reserved.
Software License Agreement

Texas Instruments (TI) is supplying this software for use solely and
exclusively on TI's microcontroller products. The software is owned by
TI and/or its suppliers, and is protected under applicable copyright
laws. You may not combine this software with "viral" open-source
software in order to form a larger program.

THIS SOFTWARE IS PROVIDED "AS IS" AND WITH ALL FAULTS.
NO WARRANTIES, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT
NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. TI SHALL NOT, UNDER ANY
CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR CONSEQUENTIAL
DAMAGES, FOR ANY REASON WHATSOEVER.

This is part of revision 10636 of the RDK-BDC Firmware Package.
